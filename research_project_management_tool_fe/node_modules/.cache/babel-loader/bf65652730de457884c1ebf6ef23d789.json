{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prabath/Documents/reactproject/src/components/dashboard.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport { EditUserModal } from './EditUserModal';\nimport axios from \"axios\";\nexport class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: [],\n      editModalShow: false\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  async refreshList() {\n    try {\n      var token = localStorage.getItem('user_token');\n      const res = await axios.get('http://127.0.0.1:4000/api/users', {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data.results);\n\n      if (res) {\n        this.setState({\n          user: res.data.results\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  deleteCat(id) {\n    if (window.confirm('Are you sure?')) {\n      fetch('http://localhost:4000/category/id/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      id,\n      name,\n      status,\n      version\n    } = this.state;\n\n    let EditModelClose = () => this.setState({\n      editModalShow: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(EditUserModal, {\n          show: this.state.editModalShow,\n          onHide: EditModelClose,\n          id: id,\n          name: name,\n          status: status,\n          version: version\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-lg-5\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: user.map(users => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: users.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"info\",\n                  onClick: () => this.setState({\n                    editModalShow: true,\n                    id: users.id,\n                    name: users.name,\n                    status: users.status,\n                    version: users.version\n                  }),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"danger\",\n                  onClick: () => this.deleteCat(users.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, users.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/reactproject/src/components/dashboard.js"],"names":["React","Component","Table","Button","ButtonToolbar","EditUserModal","axios","Dashboard","constructor","props","state","user","editModalShow","componentDidMount","refreshList","token","localStorage","getItem","res","get","headers","console","log","data","results","setState","err","deleteCat","id","window","confirm","fetch","method","render","name","status","version","EditModelClose","map","users","firstName","lastName","gender","email","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport { EditUserModal } from './EditUserModal';\nimport axios from \"axios\";\n\nexport class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { user: [] , editModalShow: false}\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n\n\n     async refreshList(){\n        try{\n            var token = localStorage.getItem('user_token');\n            const res =  await axios.get('http://127.0.0.1:4000/api/users',{\n                headers: {\n                    'authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            });\n            console.log(res.data.results)\n            if(res){\n                this.setState({ user: res.data.results });\n            }\n        }catch (err){\n            console.log(err)\n        }\n    }\n\n\n\n    deleteCat(id)\n    {\n        if(window.confirm('Are you sure?')) {\n            fetch('http://localhost:4000/category/id/'+id,{\n                method: 'DELETE',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n        }\n    }\n\n    render() {\n        const { user, id, name,status,version } = this.state;\n        let EditModelClose = () => this.setState({ editModalShow: false })\n        return (\n            <div className=\"mt-4\">\n                <ButtonToolbar>\n\n                    <EditUserModal\n                        show={this.state.editModalShow}\n                        onHide={EditModelClose}\n                        id={id}\n                        name={name}\n                        status={status}\n                        version={version}\n                    />\n                </ButtonToolbar>\n                <Table className=\"mt-lg-5\" striped bordered hover size=\"sm\">\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Gender</th>\n                        <th>Email</th>\n                        <th>Contact Number</th>\n                        <th>Option</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {user.map(users =>\n                        <tr key={users.id}>\n                            <td>{users.id}</td>\n                            <td>{users.firstName}</td>\n                            <td>{users.lastName}</td>\n                            <td>{users.gender}</td>\n                            <td>{users.email}</td>\n                            <td>{users.number}</td>\n                            <td>\n                                <ButtonToolbar>\n                                    <Button className=\"mr-2\" variant=\"info\"\n                                            onClick={()=> this.setState({editModalShow:true, id:users.id, name:users.name, status:users.status, version:users.version})}>\n                                        Edit\n                                    </Button>\n                                    <Button className=\"mr-2\" variant=\"danger\"\n                                            onClick={()=> this.deleteCat(users.id)}>\n                                        Delete\n                                    </Button>\n                                </ButtonToolbar>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </Table>\n\n            </div>\n        );\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}