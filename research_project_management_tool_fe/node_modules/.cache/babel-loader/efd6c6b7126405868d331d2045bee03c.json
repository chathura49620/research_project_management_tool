{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prabath/Documents/reactproject/src/components/EditUserModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from \"axios\";\nexport class EditUserModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserDetails();\n  }\n\n  async getUserDetails() {\n    try {\n      var token = localStorage.getItem('user_token');\n      const res = await axios.get('http://127.0.0.1:4000/api/users/' + this.props.id, {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('******', res);\n\n      if (res) {\n        this.setState({\n          user: res.data.results\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleSubmit(event, props) {\n    event.preventDefault();\n    fetch('http://localhost:8080/category/update/' + this.props.id, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'username': 'menuka'\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        name: event.target.name.value,\n        status: event.target.status.value,\n        version: this.props.version\n      })\n    }).then(res => res.json()).then(result => {\n      //alert(\"Success\");\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Success'\n      });\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Failed'\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"id\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"id\",\n                required: true,\n                disabled: true,\n                defaultValue: this.props.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name\",\n                required: true,\n                placeholder: \"Category Name\",\n                defaultValue: this.props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                required: true,\n                name: \"status\",\n                defaultValue: this.props.status,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  disabled: true,\n                  children: this.props.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"ACTIVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"INACTIVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"version\",\n              hidden: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"version\",\n                required: true,\n                defaultValue: this.props.version\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Edit Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/reactproject/src/components/EditUserModal.js"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","Snackbar","IconButton","axios","EditUserModal","constructor","props","handleSubmit","bind","componentDidMount","getUserDetails","token","localStorage","getItem","res","get","id","headers","console","log","setState","user","data","results","err","event","preventDefault","fetch","method","body","JSON","stringify","target","value","name","status","version","then","json","result","snackbaropen","snackbarmsg","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from \"axios\";\n\nexport class EditUserModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n\n    componentDidMount() {\n        this.getUserDetails();\n    }\n\n\n    async getUserDetails(){\n        try{\n            var token = localStorage.getItem('user_token');\n            const res =  await axios.get('http://127.0.0.1:4000/api/users/'+this.props.id,{\n                headers: {\n                    'authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            });\n            console.log( '******', res)\n            if(res){\n                this.setState({ user: res.data.results });\n            }\n        }catch (err){\n            console.log(err)\n        }\n    }\n    handleSubmit(event,props) {\n        event.preventDefault();\n\n\n        fetch('http://localhost:8080/category/update/'+this.props.id, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'menuka'\n            },\n            body: JSON.stringify({\n                id: event.target.id.value,\n                name: event.target.name.value,\n                status: event.target.status.value,\n                version: this.props.version\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                    //alert(\"Success\");\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Success' })\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n\n\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"id\">\n                                        <Form.Label>ID</Form.Label>\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue = {this.props.id}/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue = {this.props.name}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue = {this.props.status}>\n                                            <option selected disabled>{this.props.status}</option>\n                                            <option>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"version\" hidden>\n                                        <Form.Label>Version</Form.Label>\n                                        <Form.Control type=\"text\" name=\"version\" required  defaultValue = {this.props.version}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\" >\n                                            Edit Category\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                                {/*<form onSubmit={event => this.handleFormSubmit(event)}>*/}\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>First Name</label>{this.props.last_name}*/}\n                                {/*        <input*/}\n                                {/*            name=\"first_name\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"First Name\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Last Name</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"last_name\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Last Name\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Gender</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"gender\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Gender\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Email address</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"email\"*/}\n                                {/*            type=\"email\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Enter email\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Contact No</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"number\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Contact No\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Password</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"password\"*/}\n                                {/*            type=\"password\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Enter password\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n                                {/*    <button type=\"submit\" className=\"btn btn-primary btn-block\">Update</button>*/}\n                                {/*</form>*/}\n                            </Col>\n                        </Row>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}