{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/prabath/Documents/reactproject/src/components/EditUserModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from \"axios\";\nexport class EditUserModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    this.getUserDetails();\n  }\n\n  async getUserDetails() {\n    try {\n      var token = localStorage.getItem('user_token');\n      const res = await axios.get('http://127.0.0.1:4000/api/users/' + this.props.id, {\n        headers: {\n          'authorization': `Bearer ${token}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('******', res);\n\n      if (res) {\n        this.setState({\n          user: res.data.results\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleSubmit(event, props) {\n    event.preventDefault();\n    fetch('http://localhost:8080/category/update/' + this.props.id, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'username': 'menuka'\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        name: event.target.name.value,\n        status: event.target.status.value,\n        version: this.props.version\n      })\n    }).then(res => res.json()).then(result => {\n      //alert(\"Success\");\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Success'\n      });\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Failed'\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 6000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 36\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          onClick: this.snackbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 31\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Edit Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"id\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"id\",\n                    required: true,\n                    disabled: true,\n                    defaultValue: this.props.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"name\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"name\",\n                    required: true,\n                    placeholder: \"Category Name\",\n                    defaultValue: this.props.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    required: true,\n                    name: \"status\",\n                    defaultValue: this.props.status,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      selected: true,\n                      disabled: true,\n                      children: this.props.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"ACTIVE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"INACTIVE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"version\",\n                  hidden: true,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Version\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"version\",\n                    required: true,\n                    defaultValue: this.props.version\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Edit Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/reactproject/src/components/EditUserModal.js"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","Snackbar","IconButton","axios","EditUserModal","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","handleSubmit","bind","shouldComponentUpdate","getUserDetails","token","localStorage","getItem","res","get","id","headers","console","log","user","data","results","err","preventDefault","fetch","method","body","JSON","stringify","target","value","name","status","version","then","json","result","error","render","vertical","horizontal","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from \"axios\";\n\nexport class EditUserModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { snackbaropen: false, snackbarmsg: '' };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n\n    shouldComponentUpdate() {\n        this.getUserDetails();\n    }\n\n\n    async getUserDetails(){\n        try{\n            var token = localStorage.getItem('user_token');\n            const res =  await axios.get('http://127.0.0.1:4000/api/users/'+this.props.id,{\n                headers: {\n                    'authorization': `Bearer ${token}`,\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            });\n            console.log( '******', res)\n            if(res){\n                this.setState({ user: res.data.results });\n            }\n        }catch (err){\n            console.log(err)\n        }\n    }\n    handleSubmit(event,props) {\n        event.preventDefault();\n\n\n        fetch('http://localhost:8080/category/update/'+this.props.id, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'menuka'\n            },\n            body: JSON.stringify({\n                id: event.target.id.value,\n                name: event.target.name.value,\n                status: event.target.status.value,\n                version: this.props.version\n\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                    //alert(\"Success\");\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Success' })\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                          open={this.state.snackbaropen}\n                          autoHideDuration={6000}\n                          onClose={this.snackbarClose}\n                          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                          action={[\n                              <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\n                          ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Edit Category\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"id\">\n                                        <Form.Label>ID</Form.Label>\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue = {this.props.id}/>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"name\">\n                                        <Form.Label>Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue = {this.props.name}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Status</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue = {this.props.status}>\n                                            <option selected disabled>{this.props.status}</option>\n                                            <option>ACTIVE</option>\n                                            <option>INACTIVE</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"version\" hidden>\n                                        <Form.Label>Version</Form.Label>\n                                        <Form.Control type=\"text\" name=\"version\" required  defaultValue = {this.props.version}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\" >\n                                            Edit Category\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                                {/*<form onSubmit={event => this.handleFormSubmit(event)}>*/}\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>First Name</label>{this.props.last_name}*/}\n                                {/*        <input*/}\n                                {/*            name=\"first_name\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"First Name\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Last Name</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"last_name\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Last Name\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Gender</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"gender\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Gender\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Email address</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"email\"*/}\n                                {/*            type=\"email\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Enter email\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Contact No</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"number\"*/}\n                                {/*            type=\"text\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Contact No\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n\n                                {/*    <div className=\"form-group\">*/}\n                                {/*        <label>Password</label>*/}\n                                {/*        <input*/}\n                                {/*            name=\"password\"*/}\n                                {/*            type=\"password\"*/}\n                                {/*            className=\"form-control\"*/}\n                                {/*            placeholder=\"Enter password\"*/}\n\n                                {/*        />*/}\n                                {/*    </div>*/}\n                                {/*    <button type=\"submit\" className=\"btn btn-primary btn-block\">Update</button>*/}\n                                {/*</form>*/}\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}